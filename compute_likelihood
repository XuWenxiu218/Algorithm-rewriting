import numpy
import pprint
import cts
import id2word
from scipy.special import polygamma
from scipy.special import gammaln, psi
from gensim import interfaces, utils, matutils, _matutils
import pandas as pd

def compute_likelihood(gamma,alpha,id2words,q_lk,beta):
    #print(gamma)

    dig_k=psi(gamma)
    gamma_sum=gamma.sum(axis=0)
    dig_gamma_sum=psi(gamma_sum)
    lgamma=gammaln(alpha)
    likelihood=gammaln(alpha.sum(axis=0))-lgamma.sum(axis=0)-gammaln(gamma_sum)
    #print(likelihood)
    a_dig_k=(alpha-1)*dig_k
    likelihood2=numpy.zeros((5,1))
    likelihood3 = numpy.zeros((1031, 5))

    for i in range(5):
        likelihood2[i] = (alpha[i] - 1) * (dig_k[i] - dig_gamma_sum) + gammaln(gamma[i])-(gamma[i]-1)*(dig_k[i]-dig_gamma_sum)


        for j in range(1031):
            likelihood3[j][i]=id2words[j]*q_lk[j][i]*((dig_k[i]-dig_gamma_sum)+beta[j][i])

    likelihood=likelihood+likelihood2.sum(axis=0)+numpy.sum(numpy.reshape(likelihood3,(likelihood3.size,)))
    #print(likelihood2.sum(axis=0))
    #print(likelihood)
    #print(likelihood3)
    return likelihood










